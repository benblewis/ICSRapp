{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Benjamin Lewis\\\\ICSR Database\\\\icsr-app\\\\src\\\\ui-components\\\\Testform.jsx\",\n  _s = $RefreshSig$();\n/***************************************************************************\n * The contents of this file were generated with Amplify Studio.           *\n * Please refrain from making any modifications to this file.              *\n * Any changes to this file will be overwritten when running amplify pull. *\n **************************************************************************/\n\n/* eslint-disable */\nimport * as React from \"react\";\nimport { Button, Flex, Grid } from \"@aws-amplify/ui-react\";\nimport { getOverrideProps } from \"@aws-amplify/ui-react/internal\";\nimport { fetchByPath, validateField } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Testform(props) {\n  _s();\n  const {\n    onSubmit,\n    onValidate,\n    onChange,\n    overrides,\n    ...rest\n  } = props;\n  const initialValues = {};\n  const [errors, setErrors] = React.useState({});\n  const resetStateValues = () => {\n    setErrors({});\n  };\n  const validations = {};\n  const runValidationTasks = async (fieldName, currentValue, getDisplayValue) => {\n    const value = currentValue && getDisplayValue ? getDisplayValue(currentValue) : currentValue;\n    let validationResponse = validateField(value, validations[fieldName]);\n    const customValidator = fetchByPath(onValidate, fieldName);\n    if (customValidator) {\n      validationResponse = await customValidator(value, validationResponse);\n    }\n    setErrors(errors => ({\n      ...errors,\n      [fieldName]: validationResponse\n    }));\n    return validationResponse;\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    as: \"form\",\n    rowGap: \"15px\",\n    columnGap: \"15px\",\n    padding: \"20px\",\n    onSubmit: async event => {\n      event.preventDefault();\n      const modelFields = {};\n      const validationResponses = await Promise.all(Object.keys(validations).reduce((promises, fieldName) => {\n        if (Array.isArray(modelFields[fieldName])) {\n          promises.push(...modelFields[fieldName].map(item => runValidationTasks(fieldName, item)));\n          return promises;\n        }\n        promises.push(runValidationTasks(fieldName, modelFields[fieldName]));\n        return promises;\n      }, []));\n      if (validationResponses.some(r => r.hasError)) {\n        return;\n      }\n      await onSubmit(modelFields);\n    },\n    ...getOverrideProps(overrides, \"Testform\"),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      ...getOverrideProps(overrides, \"CTAFlex\"),\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Clear\",\n        type: \"reset\",\n        onClick: event => {\n          event.preventDefault();\n          resetStateValues();\n        },\n        ...getOverrideProps(overrides, \"ClearButton\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        gap: \"15px\",\n        ...getOverrideProps(overrides, \"RightAlignCTASubFlex\"),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Submit\",\n          type: \"submit\",\n          variation: \"primary\",\n          isDisabled: Object.values(errors).some(e => e === null || e === void 0 ? void 0 : e.hasError),\n          ...getOverrideProps(overrides, \"SubmitButton\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Testform, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\n_c = Testform;\nvar _c;\n$RefreshReg$(_c, \"Testform\");","map":{"version":3,"names":["React","Button","Flex","Grid","getOverrideProps","fetchByPath","validateField","jsxDEV","_jsxDEV","Testform","props","_s","onSubmit","onValidate","onChange","overrides","rest","initialValues","errors","setErrors","useState","resetStateValues","validations","runValidationTasks","fieldName","currentValue","getDisplayValue","value","validationResponse","customValidator","as","rowGap","columnGap","padding","event","preventDefault","modelFields","validationResponses","Promise","all","Object","keys","reduce","promises","Array","isArray","push","map","item","some","r","hasError","children","justifyContent","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","gap","variation","isDisabled","values","e","_c","$RefreshReg$"],"sources":["C:/Users/Benjamin Lewis/ICSR Database/icsr-app/src/ui-components/Testform.jsx"],"sourcesContent":["/***************************************************************************\n * The contents of this file were generated with Amplify Studio.           *\n * Please refrain from making any modifications to this file.              *\n * Any changes to this file will be overwritten when running amplify pull. *\n **************************************************************************/\n\n/* eslint-disable */\nimport * as React from \"react\";\nimport { Button, Flex, Grid } from \"@aws-amplify/ui-react\";\nimport { getOverrideProps } from \"@aws-amplify/ui-react/internal\";\nimport { fetchByPath, validateField } from \"./utils\";\nexport default function Testform(props) {\n  const { onSubmit, onValidate, onChange, overrides, ...rest } = props;\n  const initialValues = {};\n  const [errors, setErrors] = React.useState({});\n  const resetStateValues = () => {\n    setErrors({});\n  };\n  const validations = {};\n  const runValidationTasks = async (\n    fieldName,\n    currentValue,\n    getDisplayValue\n  ) => {\n    const value =\n      currentValue && getDisplayValue\n        ? getDisplayValue(currentValue)\n        : currentValue;\n    let validationResponse = validateField(value, validations[fieldName]);\n    const customValidator = fetchByPath(onValidate, fieldName);\n    if (customValidator) {\n      validationResponse = await customValidator(value, validationResponse);\n    }\n    setErrors((errors) => ({ ...errors, [fieldName]: validationResponse }));\n    return validationResponse;\n  };\n  return (\n    <Grid\n      as=\"form\"\n      rowGap=\"15px\"\n      columnGap=\"15px\"\n      padding=\"20px\"\n      onSubmit={async (event) => {\n        event.preventDefault();\n        const modelFields = {};\n        const validationResponses = await Promise.all(\n          Object.keys(validations).reduce((promises, fieldName) => {\n            if (Array.isArray(modelFields[fieldName])) {\n              promises.push(\n                ...modelFields[fieldName].map((item) =>\n                  runValidationTasks(fieldName, item)\n                )\n              );\n              return promises;\n            }\n            promises.push(\n              runValidationTasks(fieldName, modelFields[fieldName])\n            );\n            return promises;\n          }, [])\n        );\n        if (validationResponses.some((r) => r.hasError)) {\n          return;\n        }\n        await onSubmit(modelFields);\n      }}\n      {...getOverrideProps(overrides, \"Testform\")}\n      {...rest}\n    >\n      <Flex\n        justifyContent=\"space-between\"\n        {...getOverrideProps(overrides, \"CTAFlex\")}\n      >\n        <Button\n          children=\"Clear\"\n          type=\"reset\"\n          onClick={(event) => {\n            event.preventDefault();\n            resetStateValues();\n          }}\n          {...getOverrideProps(overrides, \"ClearButton\")}\n        ></Button>\n        <Flex\n          gap=\"15px\"\n          {...getOverrideProps(overrides, \"RightAlignCTASubFlex\")}\n        >\n          <Button\n            children=\"Submit\"\n            type=\"submit\"\n            variation=\"primary\"\n            isDisabled={Object.values(errors).some((e) => e?.hasError)}\n            {...getOverrideProps(overrides, \"SubmitButton\")}\n          ></Button>\n        </Flex>\n      </Flex>\n    </Grid>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}